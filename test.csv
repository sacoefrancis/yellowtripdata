name,ring,quadrant,isNew,description
rancher,adopt,tools,FALSE,"<p>Fast feedback is crucial for a good developer experience. Nothing breaks the flow of development more than having to wait a minute or two before getting feedback on the last code changes. Unfortunately, with applications growing in size and complexity, the popular build tools for front-end pipelines are often not fast enough anymore. Previously, we featured <a href=""/radar/tools/esbuild"">esbuild</a>, which offers a significant performance improvement, because it's implemented in a compile-to-native language rather than JavaScript. <strong><a href=""https://vitejs.dev/"">Vite</a></strong>, which is built on top of esbuild, delivers <a href=""https://vitejs.dev/guide/why.html"">significant improvements</a> over other tools. It consists of two major parts: a dev server that provides rich feature enhancements over native ES modules, such as extremely fast Hot Module Replacement (HMR), and a build command that bundles your code with Rollup. Vite relies on ES modules, and unlike most older tools, it doesn't provide shimming or polyfills, which means it's not compatible with older browsers that don't support ES modules. In cases where older browsers had to be supported, some of our teams used Vite during development and other tools for production builds.</p>"
Team cognitive load,Trial,Techniques,FALSE,"<p>A system's architecture mimics organizational structure and its communication. It's not big news that we should be intentional about how teams interact â€” see, for instance, the <a href=""/radar/techniques/inverse-conway-maneuver"">Inverse Conway Maneuver</a>. Team interaction is one of the variables for how fast and how easily teams can deliver value to their customers. We were happy to find a way to measure these interactions; we used the <a href=""https://teamtopologies.com/book"">Team Topologies</a> author's <a href=""https://github.com/TeamTopologies/Team-Cognitive-Load-Assessment"">assessment</a> which gives you an understanding of how easy or difficult the teams find it to build, test and maintain their services. By measuring <strong>team cognitive load</strong>, we could better advise our clients on how to change their teams' structure and evolve their interactions.</p>"
AR spatial anchors,Assess,Techniques,TRUE,"<p>Many augmented reality (AR) applications depend on knowing the location and orientation of the user's device. The default is to use GPS-based solutions, but <strong>spatial anchors</strong>, a newer technique to address this requirement, are also worth considering. Spatial anchors work with the image recorded by the device's camera, using image features and their relative position in 3D space to recognize a real-world location. For this location a corresponding anchor is created in the AR space. Although spatial anchors can't replace all GPS and marker-based anchors, they do provide more accuracy than most GPS-based solutions and are more resilient to different viewing angles than marker-based anchors. Our experience is currently limited to Google's <a href=""https://developers.google.com/ar/develop/java/cloud-anchors/overview-android"">Cloud Anchors for Android</a>, which worked well for us. Somewhat uncharacteristically Google also offers <a href=""https://developers.google.com/ar/develop/ios/cloud-anchors/quickstart"">Cloud Anchors for iOS</a> and with <a href=""https://docs.microsoft.com/en-us/azure/spatial-anchors/overview"">Azure Spatial Anchors</a> Microsoft supports even more platforms.</p>"
Hotwire,Assess,Techniques,FALSE,"<p>After successfully launching their email application <a href=""https://hey.com/"">HEY</a> as a server-side application, Basecamp <a href=""https://world.hey.com/dhh/bringing-hotwire-to-basecamp-91a442d6"">reported</a> migrating its flagship product, <a href=""https://basecamp.com/"">Basecamp 3</a>, to <strong><a href=""https://hotwire.dev/"">Hotwire</a></strong> this summer. As organizations increasingly default to single-page applications (SPAs) for new web development, we continue to be excited by Hotwire swimming against the stream. Unlike SPAs, Hotwire applications keep most of the logic and navigation on the server, relying on a minimal amount of browser JavaScript. Hotwire modularizes HTML pages into a set of components (called <a href=""https://turbo.hotwired.dev/"">Turbo Frames</a>) that can be lazy loaded, provide independent contexts and send HTML updates to those contexts based on user actions. SPAs offer undeniable user responsiveness, but the simplicity of traditional server-side web programming combined with modern browser tooling provides a refreshing take on balancing developer effectiveness and user responsiveness.</p>"
Operator pattern for nonclustered resources,Assess,Techniques,TRUE,"<p>We're seeing increasing use of the <a href=""/radar/tools/kubernetes-operators"">Kubernetes Operator</a> pattern for purposes other than managing applications deployed on the cluster. Using the <strong>operator pattern for nonclustered resources</strong> takes advantage of custom resource definitions and the event-driven scheduling mechanism implemented in the Kubernetes control plane to manage activities that are related to yet outside of the cluster. This technique builds on the idea of <a href=""/radar/techniques/kube-managed-cloud-services"">Kube-managed cloud services</a> and extends it to other activities, such as continuous deployment or reacting to changes in external repositories. One advantage of this technique over a purpose-built tool is that it opens up a wide range of tools that either come with Kubernetes or are part of the wider ecosystem. You can use commands such as <code>diff</code>, <code>dry-run</code> or <code>apply</code> to interact with the operator's custom resources. Kube's scheduling mechanism makes development easier by eliminating the need to orchestrate activities in the proper order. Open-source tools such as <a href=""/radar/tools/crossplane"">Crossplane</a>, <a href=""https://fluxcd.io/"">Flux</a> and <a href=""/radar/platforms/argo-cd"">ArgoCD</a> take advantage of this technique and we expect to see more of these emerge over time.</p>"
Remote spontaneous huddling,Assess,Techniques,TRUE,"<p>We're seeing continued innovation in remote collaboration tools. The new <a href=""https://slack.com/help/articles/4402059015315-Start-a-huddle-in-a-channel-or-direct-message"">Huddles</a> feature in Slack provides a Discord-like experience of persistent audio calls that users can jump in and out of at any time. <a href=""https://www.gather.town/"">Gather</a> provides a creative way to emulate a virtual office with avatars and video. IDEs provide direct collaboration features for pairing and debugging: we've previously blipped <a href=""/radar/tools/visual-studio-live-share"">Visual Studio Live Share</a> and included <a href=""/radar/tools/code-with-me"">JetBrains Code With Me</a> to the list in this edition. As tools continue to evolve modalities for collaboration in addition to video conferencing, we're increasingly seeing teams participating in <strong>remote spontaneous huddling</strong>, recreating the spontaneity of informal conversations over the intentionality of scheduling a Zoom or Microsoft Teams meeting. We don't expect to ever fully recreate the richness of face-to-face communication through digital tools, but we do see improved remote team effectiveness by giving teams multiple channels of collaboration rather than relying on one toolchain for everything.</p>"
Software Bill of Materials,Assess,Techniques,TRUE,"<p>In May 2021, the U.S. White House published its <a href=""https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/"">Executive Order on Improving the Nation's Cybersecurity</a>. The document puts forward several technical mandates that relate to items we've featured in past Radars, such as <a href=""/radar/techniques/zero-trust-architecture"">zero trust architecture</a> and automated compliance scanning using <a href=""/radar/techniques/security-policy-as-code"">security policy as code</a>. Much of the document is devoted to improving the security of the software supply chain. One item in particular that caught our attention was the requirement that government software should contain a machine-readable <strong>Software Bill of Materials (SBOM)</strong>, defined as ""a formal record containing the details and supply chain relationships of various components used in building software."" In other words, it should detail not just the components shipped but also the tools and frameworks used to deliver the software. This order has the potential to usher in a new era of transparency and openness in software development. This will undoubtedly have an impact on those of us who produce software for a living. Many, if not all software products produced today contain open-source components or employ them in the build process. Often, the consumer has no way of knowing which version of which package might have an impact on the security of their product. Instead they must rely on the security alerts and patches provided by the retail vendor. This executive order will ensure that an explicit description of all components is made available to consumers, empowering them to implement their own security controls. And since the SBOM is machine-readable, those controls can be automated. We sense that this move also represents a shift toward embracing open-source software and practically addressing both the security risks and benefits that it provides.</p>"
